{"version":3,"sources":["sounds/Heater-1.mp3","sounds/Heater-2.mp3","sounds/Heater-3.mp3","sounds/Heater-4.mp3","sounds/Heater-5.mp3","sounds/Chord_1.mp3","sounds/Chord_2.mp3","sounds/Chord_3.mp3","sounds/Kick_n_Hat.mp3","components/DrumMachine/SoundControl.js","components/DrumMachine/DrumButton.js","components/DrumMachine/soundList.js","actions/actionTypes.js","components/DrumMachine/DrumMachine.js","actions/actions.js","components/Header/Header.js","reducers/powerStatus.js","reducers/setSound.js","reducers/index.js","store.js","Main.js","index.js"],"names":["module","exports","__webpack_require__","p","SoundController","styled","div","_templateObject","PowerButton","button","_templateObject2","props","show","SoundControl","react_default","a","createElement","onClick","handleClick","status","text","MyButton","DrumButton_templateObject","DrumButton","id","buttonId","audioId","src","type","soundList","q","sound","Heater1","name","key","w","Heater2","e","Heater3","Heater4","s","Heater5","d","Chord1","z","Chord2","x","Chord3","c","KickNHat","TOGGLE_POWER","DrumMachineWrapper","DrumMachine_templateObject","ButtonWrapper","DrumMachine_templateObject2","originalButtonColor","pressedButtonColor","DrumMachine","handleKeyDown","event","_this","playSound","test","document","getElementById","style","backgroundColor","handleKeyUp","console","log","target","innerText","power","play","selectedSound","addEventListener","this","removeEventListener","_this2","buttons","Object","values","map","DrumMachine_DrumButton","DrumMachine_SoundControl","currentSound","togglePower","Component","myActions","actionTypes","connect","state","powerStatus","setSound","Heading","h1","Header_templateObject","Header","initialState","arguments","length","undefined","action","objectSpread","combineReducers","store","createStore","reducer","GlobalStyle","createGlobalStyle","Main_templateObject","Main","es","Header_Header","components_DrumMachine_DrumMachine","ReactDOM","render","src_Main"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,yDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,yDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,yDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,yDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,yDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,wDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,wDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,wDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,mhBCGxC,IAAMC,EAAkBC,IAAOC,IAAVC,KAOfC,EAAcH,IAAOI,OAAVC,IAIK,SAAAC,GAAK,OAAKA,EAAMC,KAAO,QAAU,QAcxCC,MAXf,SAAsBF,GACpB,OACEG,EAAAC,EAAAC,cAACZ,EAAD,KACEU,EAAAC,EAAAC,cAACR,EAAD,CAAaI,KAAMD,EAAMC,KAAMK,QAASN,EAAMO,aAC3CP,EAAMQ,QAETL,EAAAC,EAAAC,cAAA,WAAML,EAAMS,4bCpBlB,IAAMC,EAAWhB,IAAOC,IAAVgB,KA+BCC,MATf,SAAoBZ,GAClB,OACEG,EAAAC,EAAAC,cAACK,EAAD,CAAUG,GAAIb,EAAMc,SAAUR,QAASN,EAAMO,aAC1CP,EAAMS,KACPN,EAAAC,EAAAC,cAAA,SAAOQ,GAAIb,EAAMe,QAASC,IAAKhB,EAAMgB,IAAKC,KAAK,yKC6BtCC,EAhDG,CAChBC,EAAG,CACDC,MAAOC,IACPC,KAAM,UACNC,IAAK,KAEPC,EAAG,CACDJ,MAAOK,IACPH,KAAM,UACNC,IAAK,KAEPG,EAAG,CACDN,MAAOO,IACPL,KAAM,UACNC,IAAK,KAEPnB,EAAG,CACDgB,MAAOQ,IACPN,KAAM,UACNC,IAAK,KAEPM,EAAG,CACDT,MAAOU,IACPR,KAAM,UACNC,IAAK,KAEPQ,EAAG,CACDX,MAAOY,IACPV,KAAM,SACNC,IAAK,KAEPU,EAAG,CACDb,MAAOc,IACPZ,KAAM,SACNC,IAAK,KAEPY,EAAG,CACDf,MAAOgB,IACPd,KAAM,SACNC,IAAK,KAEPc,EAAG,CACDjB,MAAOkB,IACPhB,KAAM,WACNC,IAAK,MCtDIgB,EAAe,ucCQ5B,IAAMC,EAAqB9C,IAAOC,IAAV8C,KAWlBC,EAAgBhD,IAAOC,IAAVgD,KAWbC,EAAsB,UACtBC,EAAqB,UAErBC,6MAYJC,cAAgB,SAAAC,GACdC,EAAKC,UAAUF,EAAMzB,KAEjB,eAAe4B,KAAKH,EAAMzB,OAC5B6B,SAASC,eACPL,EAAMzB,IAAM,UACZ+B,MAAMC,gBAAkBV,MAK9BW,YAAc,SAAAR,GACR,eAAeG,KAAKH,EAAMzB,OAC5B6B,SAASC,eACPL,EAAMzB,IAAM,UACZ+B,MAAMC,gBAAkBX,MAK9BrC,YAAc,SAAAyC,GAEZS,QAAQC,IAAIV,EAAMW,OAAO9C,IACzBoC,EAAKC,UAAUF,EAAMW,OAAOC,cAG9BV,UAAY,SAAA3B,GAGN0B,EAAKjD,MAAM6D,OAAS,eAAeV,KAAK5B,KAC1C6B,SAASC,eAAe9B,GAAKuC,OAC7Bb,EAAKjD,MAAM+D,cAAcxC,wFAzC3B6B,SAASY,iBAAiB,UAAWC,KAAKlB,eAC1CK,SAASY,iBAAiB,QAASC,KAAKT,4DAIxCJ,SAASc,oBAAoB,UAAWD,KAAKlB,eAC7CK,SAASc,oBAAoB,QAASD,KAAKT,8CAuCpC,IAAAW,EAAAF,KAEDG,EAAUC,OAAOC,OAAOpD,GAAWqD,IAAI,SAAApC,GAE3C,OADAsB,QAAQC,IAAIvB,GAEVhC,EAAAC,EAAAC,cAACmE,EAAD,CACEjE,YAAa4D,EAAK5D,YAClBQ,QAASoB,EAAEZ,IACXd,KAAM0B,EAAEZ,IACRP,IAAKmB,EAAEf,MACPN,SAAUqB,EAAEZ,IAAM,SAClBA,IAAKY,EAAEZ,IAAM,UAKnB,OACEpB,EAAAC,EAAAC,cAACmC,EAAD,KACErC,EAAAC,EAAAC,cAACqC,EAAD,KAAgB0B,GAChBjE,EAAAC,EAAAC,cAACoE,EAAD,CACEjE,OAAQyD,KAAKjE,MAAM6D,MAAQ,KAAO,MAClCpD,KAAMwD,KAAKjE,MAAM0E,aACjBnE,YAAa0D,KAAKjE,MAAM2E,YACxB1E,KAAMgE,KAAKjE,MAAM6D,gBAtEDe,aAkFpBC,EAAY,CAAEF,YCjHO,iBAAO,CAChC1D,KAAM6D,IDgHyBf,cC5GJ,SAAAxC,GAAG,MAAK,CACnCN,KFP4B,iBEQ5BM,SD4GawD,cAPS,SAAAC,GAAK,MAAK,CAChCnB,MAAOmB,EAAMC,YAAYpB,MACzBa,aAAcM,EAAME,SAASR,eAO7BG,EAFaE,CAGbjC,2FErHF,IAAMqC,EAAUzF,IAAO0F,GAAVC,KAQEC,OAJf,WACE,OAAOnF,EAAAC,EAAAC,cAAC8E,EAAD,sCCNHI,GAAe,CACnB1B,OAAO,GCDT,IAAM0B,GAAe,CACnBb,aAAc,qBAyCDQ,GAtCE,WAAkC,IAAjCF,EAAiCQ,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBD,GAAcI,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACjD,GLN4B,mBKMxBC,EAAO1E,KAiCT,OAAO+D,EAhCP,OAAQW,EAAOpE,KACb,IAAK,IACH,OAAO8C,OAAAuB,GAAA,EAAAvB,CAAA,GAAKW,EAAZ,CAAmBN,aAAc,aAEnC,IAAK,IACH,OAAOL,OAAAuB,GAAA,EAAAvB,CAAA,GAAKW,EAAZ,CAAmBN,aAAc,aAEnC,IAAK,IACH,OAAOL,OAAAuB,GAAA,EAAAvB,CAAA,GAAKW,EAAZ,CAAmBN,aAAc,aAEnC,IAAK,IACH,OAAOL,OAAAuB,GAAA,EAAAvB,CAAA,GAAKW,EAAZ,CAAmBN,aAAc,aAEnC,IAAK,IACH,OAAOL,OAAAuB,GAAA,EAAAvB,CAAA,GAAKW,EAAZ,CAAmBN,aAAc,aAEnC,IAAK,IACH,OAAOL,OAAAuB,GAAA,EAAAvB,CAAA,GAAKW,EAAZ,CAAmBN,aAAc,YAEnC,IAAK,IACH,OAAOL,OAAAuB,GAAA,EAAAvB,CAAA,GAAKW,EAAZ,CAAmBN,aAAc,YAEnC,IAAK,IACH,OAAOL,OAAAuB,GAAA,EAAAvB,CAAA,GAAKW,EAAZ,CAAmBN,aAAc,YAEnC,IAAK,IACH,OAAOL,OAAAuB,GAAA,EAAAvB,CAAA,GAAKW,EAAZ,CAAmBN,aAAc,eAEnC,QACE,OAAOM,ICjCAa,gBAAgB,CAC7BZ,YFCa,WAAmD,IAA9BD,EAA8BQ,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtBD,GAC1C,QADgEC,UAAAC,OAAA,EAAAD,UAAA,QAAAE,GACjDzE,MACb,KAAKsB,EACH,OAAO8B,OAAAuB,GAAA,EAAAvB,CAAA,GACFW,EADL,CAEEnB,OAAQmB,EAAMnB,QAGlB,QACE,OAAOmB,IETXE,cCDaY,GAFDC,aAAYC,4XCI1B,IAAMC,GAAcC,YAAHC,MA4BFC,GAVF,WACX,OACEjG,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAUP,MAAOA,IACf3F,EAAAC,EAAAC,cAAC4F,GAAD,MACA9F,EAAAC,EAAAC,cAACiG,GAAD,MACAnG,EAAAC,EAAAC,cAACkG,EAAD,QC1BNC,IAASC,OAAOtG,EAAAC,EAAAC,cAACqG,GAAD,MAAUtD,SAASC,eAAe","file":"static/js/main.43cce3bc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Heater-1.b1cfea05.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Heater-2.0d219666.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Heater-3.632e8772.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Heater-4.d9de8a50.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Heater-5.3062daca.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Chord_1.d8544f3e.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Chord_2.3946f9fe.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Chord_3.074c0a82.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Kick_n_Hat.200b4bd3.mp3\";","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst SoundController = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin: 10px;\n  padding: 20px;\n`;\n\nconst PowerButton = styled.button`\n  border-radius: 1px;\n  width: 50px;\n  margin-right: 20px;\n  background-color: ${props => (props.show ? \"green\" : \"red\")};\n`;\n\nfunction SoundControl(props) {\n  return (\n    <SoundController>\n      <PowerButton show={props.show} onClick={props.handleClick}>\n        {props.status}\n      </PowerButton>\n      <div>{props.text}</div>\n    </SoundController>\n  );\n}\n\nexport default SoundControl;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst MyButton = styled.div`\n  background-color: #ff8360;\n  transition: 0.2s;\n  width: 40px;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 30px;\n  border-radius: 3px;\n  padding-bottom: 10px;\n\n  :active {\n    background-color: #7dce82;\n  }\n  @media (max-width: 700px) {\n    :hover {\n      background-color: #7dce82;\n    }\n  }\n`;\n\nfunction DrumButton(props) {\n  return (\n    <MyButton id={props.buttonId} onClick={props.handleClick}>\n      {props.text}\n      <audio id={props.audioId} src={props.src} type=\"audio/mp3\" />\n    </MyButton>\n  );\n}\n\nexport default DrumButton;\n","import Heater1 from \"../../sounds/Heater-1.mp3\";\nimport Heater2 from \"../../sounds/Heater-2.mp3\";\nimport Heater3 from \"../../sounds/Heater-3.mp3\";\nimport Heater4 from \"../../sounds/Heater-4.mp3\";\nimport Heater5 from \"../../sounds/Heater-5.mp3\";\nimport Chord1 from \"../../sounds/Chord_1.mp3\";\nimport Chord2 from \"../../sounds/Chord_2.mp3\";\nimport Chord3 from \"../../sounds/Chord_3.mp3\";\nimport KickNHat from \"../../sounds/Kick_n_Hat.mp3\";\n\nconst soundList = {\n  q: {\n    sound: Heater1,\n    name: \"Heater1\",\n    key: \"q\"\n  },\n  w: {\n    sound: Heater2,\n    name: \"Heater2\",\n    key: \"w\"\n  },\n  e: {\n    sound: Heater3,\n    name: \"Heater3\",\n    key: \"e\"\n  },\n  a: {\n    sound: Heater4,\n    name: \"Heater4\",\n    key: \"a\"\n  },\n  s: {\n    sound: Heater5,\n    name: \"Heater5\",\n    key: \"s\"\n  },\n  d: {\n    sound: Chord1,\n    name: \"Chord1\",\n    key: \"d\"\n  },\n  z: {\n    sound: Chord2,\n    name: \"Chord2\",\n    key: \"z\"\n  },\n  x: {\n    sound: Chord3,\n    name: \"Chord3\",\n    key: \"x\"\n  },\n  c: {\n    sound: KickNHat,\n    name: \"KickNHat\",\n    key: \"c\"\n  }\n};\n\nexport default soundList;\n","export const TOGGLE_POWER = \"TOGGLE_POWER\";\nexport const SELECTED_SOUND = \"SELECTED_SOUND\";\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport styled from \"styled-components\";\nimport SoundControl from \"./SoundControl\";\nimport DrumButton from \"./DrumButton\";\nimport soundList from \"./soundList\";\nimport { togglePower, selectedSound } from \"../../actions/actions\";\n\nconst DrumMachineWrapper = styled.div`\n  background-color: #e8e288;\n  width: 90vw;\n  border-radius: 5px;\n  margin-top: 20%;\n\n  @media (min-width: 700px) {\n    width: 480px;\n  }\n`;\n\nconst ButtonWrapper = styled.div`\n  margin: auto;\n  width: 80%;\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  grid-gap: 20px;\n  justify-items: center;\n  padding: 10px;\n`;\n\n//constants to adjust the color of buttons when key pressed\nconst originalButtonColor = \"#FF8360\";\nconst pressedButtonColor = \"#7DCE82\";\n\nclass DrumMachine extends Component {\n  componentDidMount() {\n    document.addEventListener(\"keydown\", this.handleKeyDown);\n    document.addEventListener(\"keyup\", this.handleKeyUp);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"keydown\", this.handleKeyDown);\n    document.removeEventListener(\"keyup\", this.handleKeyUp);\n  }\n\n  //calls the playsound function and updates the button color when pressed\n  handleKeyDown = event => {\n    this.playSound(event.key);\n\n    if (/^[qweasdzxc]/.test(event.key)) {\n      document.getElementById(\n        event.key + \"button\"\n      ).style.backgroundColor = pressedButtonColor;\n    }\n  };\n\n  //This is a bit of a hack but forces button color to revert back to original\n  handleKeyUp = event => {\n    if (/^[qweasdzxc]/.test(event.key)) {\n      document.getElementById(\n        event.key + \"button\"\n      ).style.backgroundColor = originalButtonColor;\n    }\n  };\n\n  //TODO improve the logic of this\n  handleClick = event => {\n    //need to slice this or something...\n    console.log(event.target.id);\n    this.playSound(event.target.innerText);\n  };\n\n  playSound = key => {\n    //regex only allows below characters\n    //\"^\" this is necessary to stop playing sounds on Tab or Enter\n    if (this.props.power && /^[qweasdzxc]/.test(key)) {\n      document.getElementById(key).play();\n      this.props.selectedSound(key);\n    }\n  };\n\n  render() {\n    //this maps all 9 buttons with individual props\n    const buttons = Object.values(soundList).map(x => {\n      console.log(x);\n      return (\n        <DrumButton\n          handleClick={this.handleClick}\n          audioId={x.key}\n          text={x.key}\n          src={x.sound}\n          buttonId={x.key + \"button\"}\n          key={x.key + \"key\"}\n        />\n      );\n    });\n\n    return (\n      <DrumMachineWrapper>\n        <ButtonWrapper>{buttons}</ButtonWrapper>\n        <SoundControl\n          status={this.props.power ? \"ON\" : \"OFF\"}\n          text={this.props.currentSound}\n          handleClick={this.props.togglePower}\n          show={this.props.power}\n        />\n      </DrumMachineWrapper>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  power: state.powerStatus.power,\n  currentSound: state.setSound.currentSound\n});\n\nconst myActions = { togglePower, selectedSound };\n\nexport default connect(\n  mapStateToProps,\n  myActions\n)(DrumMachine);\n","import * as actionTypes from \"./actionTypes\";\n\nexport const togglePower = () => ({\n  type: actionTypes.TOGGLE_POWER\n});\n\n//TODO build out this action\nexport const selectedSound = key => ({\n  type: actionTypes.SELECTED_SOUND,\n  key\n});\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Heading = styled.h1`\n  color: black;\n`;\n\nfunction Header() {\n  return <Heading>Drum Machine</Heading>;\n}\n\nexport default Header;\n","import { TOGGLE_POWER } from \"../actions/actionTypes\";\n\nconst initialState = {\n  power: false\n};\n\nexport default function powerStatus(state = initialState, action) {\n  switch (action.type) {\n    case TOGGLE_POWER:\n      return {\n        ...state,\n        power: !state.power\n      };\n\n    default:\n      return state;\n  }\n}\n","import { SELECTED_SOUND } from \"../actions/actionTypes\";\n\nconst initialState = {\n  currentSound: \"No Sound Selected\"\n};\n\nconst setSound = (state = initialState, action) => {\n  if (action.type === SELECTED_SOUND) {\n    switch (action.key) {\n      case \"q\":\n        return { ...state, currentSound: \"Heater 1\" };\n\n      case \"w\":\n        return { ...state, currentSound: \"Heater 2\" };\n\n      case \"e\":\n        return { ...state, currentSound: \"Heater 3\" };\n\n      case \"a\":\n        return { ...state, currentSound: \"Heater 4\" };\n\n      case \"s\":\n        return { ...state, currentSound: \"Heater 5\" };\n\n      case \"d\":\n        return { ...state, currentSound: \"Chord 1\" };\n\n      case \"z\":\n        return { ...state, currentSound: \"Chord 2\" };\n\n      case \"x\":\n        return { ...state, currentSound: \"Chord 3\" };\n\n      case \"c\":\n        return { ...state, currentSound: \"Kick n Hat\" };\n\n      default:\n        return state;\n    }\n  } else {\n    return state;\n  }\n};\n\nexport default setSound;\n","import { combineReducers } from \"redux\";\nimport powerStatus from \"./powerStatus\";\nimport setSound from \"./setSound\";\n\nexport default combineReducers({\n  powerStatus,\n  setSound\n});\n","import { createStore } from \"redux\";\nimport reducer from \"./reducers\";\n\nconst store = createStore(reducer);\n\nexport default store;\n","import React from \"react\";\nimport DrumMachine from \"./components/DrumMachine/DrumMachine.js\";\nimport { Provider } from \"react-redux\";\nimport Header from \"./components/Header/Header.js\";\nimport store from \"./store\";\nimport { createGlobalStyle } from \"styled-components\";\n\nconst GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css?family=Bree+Serif');\n\n  html {\n    background-color: #3CDBD3;\n    text-align: center;\n  }\n\n  body {\n    margin: 0;\n    padding: 0;\n    font-family: 'Bree Serif', serif;\n    display:flex;\n    flex-direction:column;\n    align-items:center;\n  }\n`;\n\nconst Main = () => {\n  return (\n    <Provider store={store}>\n      <GlobalStyle />\n      <Header />\n      <DrumMachine />\n    </Provider>\n  );\n};\n\nexport default Main;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Main from \"./Main\";\n\nReactDOM.render(<Main />, document.getElementById(\"root\"));\n"],"sourceRoot":""}