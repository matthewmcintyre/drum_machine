{"version":3,"sources":["sounds/Heater-1.mp3","sounds/Heater-2.mp3","sounds/Heater-3.mp3","sounds/Heater-4.mp3","sounds/Heater-5.mp3","sounds/Chord_1.mp3","sounds/Chord_2.mp3","sounds/Chord_3.mp3","sounds/Kick_n_Hat.mp3","components/SoundControl.js","components/DrumButton.js","components/soundList.js","containers/DrumMachine.js","components/Header.js","reducers/powerStatus.js","reducers/setSound.js","reducers/index.js","containers/Main.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","SoundControl","props","react_default","a","createElement","onClick","handleClick","status","text","DrumButton","id","buttonName","className","audioName","src","type","soundList","q","sound","Heater1","name","key","w","Heater2","e","Heater3","Heater4","s","Heater5","d","Chord1","z","Chord2","x","Chord3","c","KickNHat","DrumMachine","setPower","_this","power","dispatch","handleKeyDown","event","playSound","console","log","target","innerText","document","getElementById","play","_this2","this","buttons","Object","values","map","components_DrumButton","addEventListener","components_SoundControl","currentSound","Component","connect","state","powerStatus","setSound","Header","initialState","combineReducers","arguments","length","undefined","store","createStore","reducer","Main","es","components_Header","src_containers_DrumMachine","Boolean","window","location","hostname","match","ReactDOM","render","containers_Main","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.90890435.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Heater-1.b1cfea05.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Heater-2.0d219666.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Heater-3.632e8772.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Heater-4.d9de8a50.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Heater-5.3062daca.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Chord_1.d8544f3e.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Chord_2.3946f9fe.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Chord_3.074c0a82.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Kick_n_Hat.200b4bd3.mp3\";","import React from \"react\";\nimport \"./SoundControl.css\";\n\nfunction SoundControl(props) {\n  return (\n    <div>\n      <button onClick={props.handleClick}>{props.status}</button>\n      <div>{props.text}</div>\n    </div>\n  );\n}\n\nexport default SoundControl;\n","import React from \"react\";\nimport \"./DrumButton.css\";\n\nfunction DrumButton(props) {\n  return (\n    <div onClick={props.handleClick} id={props.buttonName} className=\"myButton\">\n      {props.text}\n      <audio id={props.audioName} src={props.src} type=\"audio/mp3\" />\n    </div>\n  );\n}\n\nexport default DrumButton;\n","import Heater1 from \"../sounds/Heater-1.mp3\";\nimport Heater2 from \"../sounds/Heater-2.mp3\";\nimport Heater3 from \"../sounds/Heater-3.mp3\";\nimport Heater4 from \"../sounds/Heater-4.mp3\";\nimport Heater5 from \"../sounds/Heater-5.mp3\";\nimport Chord1 from \"../sounds/Chord_1.mp3\";\nimport Chord2 from \"../sounds/Chord_2.mp3\";\nimport Chord3 from \"../sounds/Chord_3.mp3\";\nimport KickNHat from \"../sounds/Kick_n_Hat.mp3\";\n\nconst soundList = {\n  q: {\n    sound: Heater1,\n    name: \"Heater1\",\n    key: \"q\"\n  },\n  w: {\n    sound: Heater2,\n    name: \"Heater2\",\n    key: \"w\"\n  },\n  e: {\n    sound: Heater3,\n    name: \"Heater3\",\n    key: \"e\"\n  },\n  a: {\n    sound: Heater4,\n    name: \"Heater4\",\n    key: \"a\"\n  },\n  s: {\n    sound: Heater5,\n    name: \"Heater5\",\n    key: \"s\"\n  },\n  d: {\n    sound: Chord1,\n    name: \"Chord1\",\n    key: \"d\"\n  },\n  z: {\n    sound: Chord2,\n    name: \"Chord2\",\n    key: \"z\"\n  },\n  x: {\n    sound: Chord3,\n    name: \"Chord3\",\n    key: \"x\"\n  },\n  c: {\n    sound: KickNHat,\n    name: \"KickNHat\",\n    key: \"c\"\n  }\n};\n\nexport default soundList;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./DrumMachine.css\";\nimport SoundControl from \"../components/SoundControl\";\nimport DrumButton from \"../components/DrumButton\";\nimport soundList from \"../components/soundList\";\n\nclass DrumMachine extends Component {\n  setPower = () => {\n    if (this.props.power === \"off\") {\n      this.props.dispatch({ type: \"POWERON\" });\n    } else {\n      this.props.dispatch({ type: \"POWEROFF\" });\n    }\n  };\n\n  handleKeyDown = event => {\n    this.playSound(event.key);\n    console.log(event.key);\n  };\n\n  handleClick = event => {\n    console.log(event.target.innerText);\n    this.playSound(event.target.innerText);\n  };\n\n  playSound = key => {\n    if (this.props.power === \"on\") {\n      switch (key) {\n        case \"q\":\n          document.getElementById(key).play();\n          this.props.dispatch({ type: \"Q\" });\n          console.log(\"q was pressed\");\n          break;\n\n        case \"w\":\n          document.getElementById(key).play();\n          this.props.dispatch({ type: \"W\" });\n          console.log(\"w was pressed\");\n          break;\n\n        case \"e\":\n          document.getElementById(key).play();\n          this.props.dispatch({ type: \"E\" });\n          console.log(\"e was pressed\");\n          break;\n\n        case \"a\":\n          document.getElementById(key).play();\n          this.props.dispatch({ type: \"A\" });\n          console.log(\"a was pressed\");\n          break;\n\n        case \"s\":\n          document.getElementById(key).play();\n          this.props.dispatch({ type: \"S\" });\n          console.log(\"s was pressed\");\n          break;\n\n        case \"d\":\n          document.getElementById(key).play();\n          this.props.dispatch({ type: \"D\" });\n          console.log(\"d was pressed\");\n          break;\n\n        case \"z\":\n          document.getElementById(key).play();\n          this.props.dispatch({ type: \"Z\" });\n          console.log(\"z was pressed\");\n          break;\n\n        case \"x\":\n          document.getElementById(key).play();\n          this.props.dispatch({ type: \"X\" });\n          console.log(\"x was pressed\");\n          break;\n\n        case \"c\":\n          document.getElementById(key).play();\n          this.props.dispatch({ type: \"C\" });\n          console.log(\"c was pressed\");\n          break;\n\n        default:\n          break;\n      }\n    }\n  };\n\n  render() {\n    const buttons = Object.values(soundList).map(x => {\n      console.log(x);\n      return (\n        <DrumButton\n          handleClick={this.handleClick}\n          audioName={x.key}\n          text={x.key}\n          src={x.sound}\n        />\n      );\n    });\n\n    document.addEventListener(\"keydown\", this.handleKeyDown);\n\n    return (\n      <div>\n        <div id=\"wrapper\">{buttons}</div>\n        <SoundControl\n          status={this.props.power}\n          text={this.props.currentSound}\n          handleClick={this.setPower}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  power: state.powerStatus.power,\n  currentSound: state.setSound.currentSound\n});\n\nexport default connect(mapStateToProps)(DrumMachine);\n","import React from \"react\";\nimport \"./Header.css\";\n\nfunction Header() {\n  return <h1>Drum Machine</h1>;\n}\n\nexport default Header;\n","const initialState = {\n  power: \"off\"\n};\n\nexport default function powerStatus(state = initialState, action) {\n  switch (action.type) {\n    case \"POWERON\":\n      return { power: \"on\" };\n\n    case \"POWEROFF\":\n      return { power: \"off\" };\n\n    default:\n      return state;\n  }\n}\n","const initialState = {\n  currentSound: \"None\"\n};\n\nexport default function setSound(state = initialState, action) {\n  switch (action.type) {\n    case \"Q\":\n      return { currentSound: \"Heater 1\" };\n\n    case \"W\":\n      return { currentSound: \"Heater 2\" };\n\n    case \"E\":\n      return { currentSound: \"Heater 3\" };\n\n    case \"A\":\n      return { currentSound: \"Heater 4\" };\n\n    case \"S\":\n      return { currentSound: \"Heater 5\" };\n\n    case \"D\":\n      return { currentSound: \"Chord 1\" };\n\n    case \"Z\":\n      return { currentSound: \"Chord 2\" };\n\n    case \"X\":\n      return { currentSound: \"Chord 3\" };\n\n    case \"C\":\n      return { currentSound: \"Kick n Hat\" };\n\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport powerStatus from \"./powerStatus\";\nimport setSound from \"./setSound\";\n\nexport default combineReducers({\n  powerStatus,\n  setSound\n});\n","import React from \"react\";\nimport DrumMachine from \"./DrumMachine\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport Header from \"../components/Header\";\nimport reducer from \"../reducers/index\";\n\nconst store = createStore(reducer);\n\nconst Main = () => {\n  return (\n    <Provider store={store}>\n      <div id=\"main\">\n        <Header />\n        <DrumMachine />\n      </div>\n    </Provider>\n  );\n};\n\nexport default Main;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Main from \"./containers/Main\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<Main />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}